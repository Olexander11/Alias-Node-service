//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfClient.ServiceAlias {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvalidUserIPFault", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class InvalidUserIPFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvalidDataBaseFault", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class InvalidDataBaseFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AliasNotExistFault", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class AliasNotExistFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeTypeNode", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class CompositeTypeNode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfClient.ServiceAlias.AliasNode[] NodeArrayField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfClient.ServiceAlias.AliasNode[] NodeArray {
            get {
                return this.NodeArrayField;
            }
            set {
                if ((object.ReferenceEquals(this.NodeArrayField, value) != true)) {
                    this.NodeArrayField = value;
                    this.RaisePropertyChanged("NodeArray");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AliasNode", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class AliasNode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDirectoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDirectory {
            get {
                return this.IsDirectoryField;
            }
            set {
                if ((this.IsDirectoryField.Equals(value) != true)) {
                    this.IsDirectoryField = value;
                    this.RaisePropertyChanged("IsDirectory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemNotExcistFault", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class ItemNotExcistFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceAlias.IServiceAlias")]
    public interface IServiceAlias {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAlias/GetDataAlias", ReplyAction="http://tempuri.org/IServiceAlias/GetDataAliasResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WpfClient.ServiceAlias.InvalidUserIPFault), Action="http://tempuri.org/IServiceAlias/GetDataAliasInvalidUserIPFaultFault", Name="InvalidUserIPFault", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        [System.ServiceModel.FaultContractAttribute(typeof(WpfClient.ServiceAlias.InvalidDataBaseFault), Action="http://tempuri.org/IServiceAlias/GetDataAliasInvalidDataBaseFaultFault", Name="InvalidDataBaseFault", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        [System.ServiceModel.FaultContractAttribute(typeof(WpfClient.ServiceAlias.AliasNotExistFault), Action="http://tempuri.org/IServiceAlias/GetDataAliasAliasNotExistFaultFault", Name="AliasNotExistFault", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        string[] GetDataAlias();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAlias/GetNode", ReplyAction="http://tempuri.org/IServiceAlias/GetNodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WpfClient.ServiceAlias.InvalidUserIPFault), Action="http://tempuri.org/IServiceAlias/GetNodeInvalidUserIPFaultFault", Name="InvalidUserIPFault", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        [System.ServiceModel.FaultContractAttribute(typeof(WpfClient.ServiceAlias.InvalidDataBaseFault), Action="http://tempuri.org/IServiceAlias/GetNodeInvalidDataBaseFaultFault", Name="InvalidDataBaseFault", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        [System.ServiceModel.FaultContractAttribute(typeof(WpfClient.ServiceAlias.ItemNotExcistFault), Action="http://tempuri.org/IServiceAlias/GetNodeItemNotExcistFaultFault", Name="ItemNotExcistFault", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        [System.ServiceModel.FaultContractAttribute(typeof(WpfClient.ServiceAlias.AliasNotExistFault), Action="http://tempuri.org/IServiceAlias/GetNodeAliasNotExistFaultFault", Name="AliasNotExistFault", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        WpfClient.ServiceAlias.CompositeTypeNode GetNode(string aliasNode, string aliasName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAlias/GetFile", ReplyAction="http://tempuri.org/IServiceAlias/GetFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WpfClient.ServiceAlias.InvalidUserIPFault), Action="http://tempuri.org/IServiceAlias/GetFileInvalidUserIPFaultFault", Name="InvalidUserIPFault", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        [System.ServiceModel.FaultContractAttribute(typeof(WpfClient.ServiceAlias.ItemNotExcistFault), Action="http://tempuri.org/IServiceAlias/GetFileItemNotExcistFaultFault", Name="ItemNotExcistFault", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        [System.ServiceModel.FaultContractAttribute(typeof(WpfClient.ServiceAlias.AliasNotExistFault), Action="http://tempuri.org/IServiceAlias/GetFileAliasNotExistFaultFault", Name="AliasNotExistFault", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        System.IO.Stream GetFile(string fullFileName, string aliasName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAlias/LenghtFile", ReplyAction="http://tempuri.org/IServiceAlias/LenghtFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WpfClient.ServiceAlias.InvalidUserIPFault), Action="http://tempuri.org/IServiceAlias/LenghtFileInvalidUserIPFaultFault", Name="InvalidUserIPFault", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        [System.ServiceModel.FaultContractAttribute(typeof(WpfClient.ServiceAlias.ItemNotExcistFault), Action="http://tempuri.org/IServiceAlias/LenghtFileItemNotExcistFaultFault", Name="ItemNotExcistFault", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        [System.ServiceModel.FaultContractAttribute(typeof(WpfClient.ServiceAlias.AliasNotExistFault), Action="http://tempuri.org/IServiceAlias/LenghtFileAliasNotExistFaultFault", Name="AliasNotExistFault", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        int LenghtFile(string fullFileName, string aliasName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAlias/MD5HashFile", ReplyAction="http://tempuri.org/IServiceAlias/MD5HashFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WpfClient.ServiceAlias.InvalidUserIPFault), Action="http://tempuri.org/IServiceAlias/MD5HashFileInvalidUserIPFaultFault", Name="InvalidUserIPFault", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        [System.ServiceModel.FaultContractAttribute(typeof(WpfClient.ServiceAlias.AliasNotExistFault), Action="http://tempuri.org/IServiceAlias/MD5HashFileAliasNotExistFaultFault", Name="AliasNotExistFault", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        [System.ServiceModel.FaultContractAttribute(typeof(WpfClient.ServiceAlias.ItemNotExcistFault), Action="http://tempuri.org/IServiceAlias/MD5HashFileItemNotExcistFaultFault", Name="ItemNotExcistFault", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        string MD5HashFile(string fullFileName, string aliasName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceAliasChannel : WpfClient.ServiceAlias.IServiceAlias, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceAliasClient : System.ServiceModel.ClientBase<WpfClient.ServiceAlias.IServiceAlias>, WpfClient.ServiceAlias.IServiceAlias {
        
        public ServiceAliasClient() {
        }
        
        public ServiceAliasClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceAliasClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceAliasClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceAliasClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] GetDataAlias() {
            return base.Channel.GetDataAlias();
        }
        
        public WpfClient.ServiceAlias.CompositeTypeNode GetNode(string aliasNode, string aliasName) {
            return base.Channel.GetNode(aliasNode, aliasName);
        }
        
        public System.IO.Stream GetFile(string fullFileName, string aliasName) {
            return base.Channel.GetFile(fullFileName, aliasName);
        }
        
        public int LenghtFile(string fullFileName, string aliasName) {
            return base.Channel.LenghtFile(fullFileName, aliasName);
        }
        
        public string MD5HashFile(string fullFileName, string aliasName) {
            return base.Channel.MD5HashFile(fullFileName, aliasName);
        }
    }
}
